import { EntregraService } from './entregra.service';
import { CreateEntregaAvulsaDto, CreateEntregaDto } from './DTO/EntregaCreate';
import { BuscaEntrega, DefIndef } from './DTO/BuscaEntrega';
export declare class EntregraController {
    private readonly entregraService;
    constructor(entregraService: EntregraService);
    Create(createEtnregaDTO: CreateEntregaDto): Promise<{
        id: string;
        quantidade: number;
        observacao: string;
        datacadastro: Date;
        motivo: string;
        nivel: string;
        status: import(".prisma/client").$Enums.status_code;
        pessoId: string;
        equipamentoId: string;
        beneficioId: string;
        usuarioId: string;
        createdAt: Date;
        updatedAt: Date;
    } | {
        error: any;
    }>;
    CreateAvulso(createEtnregaAvulsoDTO: CreateEntregaAvulsaDto): Promise<{
        id: string;
        nome: string;
        cpf: string;
        quantidade: number;
        observacao: string;
        datacadastro: Date;
        motivo: string;
        status: import(".prisma/client").$Enums.status_code;
        equipamentoId: string;
        beneficioId: string;
        usuarioId: string;
        createdAt: Date;
        updatedAt: Date;
    } | {
        error: any;
    }>;
    GetAll(take: string, skip: string): Promise<({
        pessoa: {
            id: string;
            nome: string;
            cpf: string;
            sexo: string;
            whastapp: number;
            telefone: string;
            email: string;
            datanascimento: Date;
            rg: string;
            parentesco: string;
            escolaridade: string;
            estadocivil: string;
            renda: import("@prisma/client/runtime/library").Decimal;
            ctpsassinada: number;
            ppcl: number;
            gestante: number;
            observacao: string;
            observacaorestrita: string;
            motivoexclusao: string;
            cep: string;
            logradouro: string;
            complemento: string;
            bairro: string;
            localidade: string;
            numero: string;
            uf: string;
            status: import(".prisma/client").$Enums.status_code;
            equipamentoId: string;
            pessoaId: string;
            usuarioId: string;
            createdAt: Date;
            updatedAt: Date;
        };
        beneficio: {
            id: string;
            nome: string;
            descricao: string;
            categoria: string;
            valor: import("@prisma/client/runtime/library").Decimal;
            status: import(".prisma/client").$Enums.status_code;
            createdAt: Date;
            updatedAt: Date;
        };
    } & {
        id: string;
        quantidade: number;
        observacao: string;
        datacadastro: Date;
        motivo: string;
        nivel: string;
        status: import(".prisma/client").$Enums.status_code;
        pessoId: string;
        equipamentoId: string;
        beneficioId: string;
        usuarioId: string;
        createdAt: Date;
        updatedAt: Date;
    })[] | {
        error: any;
    }>;
    GetById(id: string): Promise<{
        entrega: {
            equipamento: {
                id: string;
                nome: string;
                responsavel: string;
                sobre: string;
                observacao: string;
                cep: string;
                logradouro: string;
                complemento: string;
                bairro: string;
                localidade: string;
                numero: string;
                uf: string;
                status: import(".prisma/client").$Enums.status_code;
                createdAt: Date;
                updatedAt: Date;
            };
            usuario: {
                id: string;
                nome: string;
                email: string;
                senha: string;
                telefone: string;
                status: import(".prisma/client").$Enums.status_code;
                equipamentoId: string;
                createdAt: Date;
                updatedAt: Date;
            };
            pessoa: {
                id: string;
                nome: string;
                cpf: string;
                sexo: string;
                whastapp: number;
                telefone: string;
                email: string;
                datanascimento: Date;
                rg: string;
                parentesco: string;
                escolaridade: string;
                estadocivil: string;
                renda: import("@prisma/client/runtime/library").Decimal;
                ctpsassinada: number;
                ppcl: number;
                gestante: number;
                observacao: string;
                observacaorestrita: string;
                motivoexclusao: string;
                cep: string;
                logradouro: string;
                complemento: string;
                bairro: string;
                localidade: string;
                numero: string;
                uf: string;
                status: import(".prisma/client").$Enums.status_code;
                equipamentoId: string;
                pessoaId: string;
                usuarioId: string;
                createdAt: Date;
                updatedAt: Date;
            };
            beneficio: {
                id: string;
                nome: string;
                descricao: string;
                categoria: string;
                valor: import("@prisma/client/runtime/library").Decimal;
                status: import(".prisma/client").$Enums.status_code;
                createdAt: Date;
                updatedAt: Date;
            };
        } & {
            id: string;
            quantidade: number;
            observacao: string;
            datacadastro: Date;
            motivo: string;
            nivel: string;
            status: import(".prisma/client").$Enums.status_code;
            pessoId: string;
            equipamentoId: string;
            beneficioId: string;
            usuarioId: string;
            createdAt: Date;
            updatedAt: Date;
        };
        ultimaEntregaCestaBasica: {
            id: string;
            quantidade: number;
            observacao: string;
            datacadastro: Date;
            motivo: string;
            nivel: string;
            status: import(".prisma/client").$Enums.status_code;
            pessoId: string;
            equipamentoId: string;
            beneficioId: string;
            usuarioId: string;
            createdAt: Date;
            updatedAt: Date;
        };
        error?: undefined;
    } | {
        error: any;
        entrega?: undefined;
        ultimaEntregaCestaBasica?: undefined;
    }>;
    GetAllForPessoas(id: string, take: string, skip: string): Promise<({
        pessoa: {
            id: string;
            nome: string;
            cpf: string;
            sexo: string;
            whastapp: number;
            telefone: string;
            email: string;
            datanascimento: Date;
            rg: string;
            parentesco: string;
            escolaridade: string;
            estadocivil: string;
            renda: import("@prisma/client/runtime/library").Decimal;
            ctpsassinada: number;
            ppcl: number;
            gestante: number;
            observacao: string;
            observacaorestrita: string;
            motivoexclusao: string;
            cep: string;
            logradouro: string;
            complemento: string;
            bairro: string;
            localidade: string;
            numero: string;
            uf: string;
            status: import(".prisma/client").$Enums.status_code;
            equipamentoId: string;
            pessoaId: string;
            usuarioId: string;
            createdAt: Date;
            updatedAt: Date;
        };
        beneficio: {
            id: string;
            nome: string;
            descricao: string;
            categoria: string;
            valor: import("@prisma/client/runtime/library").Decimal;
            status: import(".prisma/client").$Enums.status_code;
            createdAt: Date;
            updatedAt: Date;
        };
    } & {
        id: string;
        quantidade: number;
        observacao: string;
        datacadastro: Date;
        motivo: string;
        nivel: string;
        status: import(".prisma/client").$Enums.status_code;
        pessoId: string;
        equipamentoId: string;
        beneficioId: string;
        usuarioId: string;
        createdAt: Date;
        updatedAt: Date;
    })[] | {
        error: any;
    }>;
    relatorioRma(getBuscaDto: BuscaEntrega): Promise<{
        entregas: ({
            tipo: string;
            equipamento: {
                id: string;
                nome: string;
                responsavel: string;
                sobre: string;
                observacao: string;
                cep: string;
                logradouro: string;
                complemento: string;
                bairro: string;
                localidade: string;
                numero: string;
                uf: string;
                status: import(".prisma/client").$Enums.status_code;
                createdAt: Date;
                updatedAt: Date;
            };
            usuario: {
                id: string;
                nome: string;
                email: string;
                senha: string;
                telefone: string;
                status: import(".prisma/client").$Enums.status_code;
                equipamentoId: string;
                createdAt: Date;
                updatedAt: Date;
            };
            pessoa: {
                id: string;
                nome: string;
                cpf: string;
                sexo: string;
                whastapp: number;
                telefone: string;
                email: string;
                datanascimento: Date;
                rg: string;
                parentesco: string;
                escolaridade: string;
                estadocivil: string;
                renda: import("@prisma/client/runtime/library").Decimal;
                ctpsassinada: number;
                ppcl: number;
                gestante: number;
                observacao: string;
                observacaorestrita: string;
                motivoexclusao: string;
                cep: string;
                logradouro: string;
                complemento: string;
                bairro: string;
                localidade: string;
                numero: string;
                uf: string;
                status: import(".prisma/client").$Enums.status_code;
                equipamentoId: string;
                pessoaId: string;
                usuarioId: string;
                createdAt: Date;
                updatedAt: Date;
            };
            beneficio: {
                id: string;
                nome: string;
                descricao: string;
                categoria: string;
                valor: import("@prisma/client/runtime/library").Decimal;
                status: import(".prisma/client").$Enums.status_code;
                createdAt: Date;
                updatedAt: Date;
            };
            id: string;
            quantidade: number;
            observacao: string;
            datacadastro: Date;
            motivo: string;
            nivel: string;
            status: import(".prisma/client").$Enums.status_code;
            pessoId: string;
            equipamentoId: string;
            beneficioId: string;
            usuarioId: string;
            createdAt: Date;
            updatedAt: Date;
        } | {
            tipo: string;
            equipamento: {
                id: string;
                nome: string;
                responsavel: string;
                sobre: string;
                observacao: string;
                cep: string;
                logradouro: string;
                complemento: string;
                bairro: string;
                localidade: string;
                numero: string;
                uf: string;
                status: import(".prisma/client").$Enums.status_code;
                createdAt: Date;
                updatedAt: Date;
            };
            usuario: {
                id: string;
                nome: string;
                email: string;
                senha: string;
                telefone: string;
                status: import(".prisma/client").$Enums.status_code;
                equipamentoId: string;
                createdAt: Date;
                updatedAt: Date;
            };
            beneficio: {
                id: string;
                nome: string;
                descricao: string;
                categoria: string;
                valor: import("@prisma/client/runtime/library").Decimal;
                status: import(".prisma/client").$Enums.status_code;
                createdAt: Date;
                updatedAt: Date;
            };
            id: string;
            nome: string;
            cpf: string;
            quantidade: number;
            observacao: string;
            datacadastro: Date;
            motivo: string;
            status: import(".prisma/client").$Enums.status_code;
            equipamentoId: string;
            beneficioId: string;
            usuarioId: string;
            createdAt: Date;
            updatedAt: Date;
        })[];
        usuarios: {
            id: string;
            nome: string;
            email: string;
            senha: string;
            telefone: string;
            status: import(".prisma/client").$Enums.status_code;
            equipamentoId: string;
            createdAt: Date;
            updatedAt: Date;
        }[];
        equipamentos: {
            id: string;
            nome: string;
            responsavel: string;
            sobre: string;
            observacao: string;
            cep: string;
            logradouro: string;
            complemento: string;
            bairro: string;
            localidade: string;
            numero: string;
            uf: string;
            status: import(".prisma/client").$Enums.status_code;
            createdAt: Date;
            updatedAt: Date;
        }[];
    }>;
    findallForRelatorioPorData(getBuscaDto: BuscaEntrega): Promise<{
        entregas: ({
            equipamento: {
                id: string;
                nome: string;
                responsavel: string;
                sobre: string;
                observacao: string;
                cep: string;
                logradouro: string;
                complemento: string;
                bairro: string;
                localidade: string;
                numero: string;
                uf: string;
                status: import(".prisma/client").$Enums.status_code;
                createdAt: Date;
                updatedAt: Date;
            };
            usuario: {
                id: string;
                nome: string;
                email: string;
                senha: string;
                telefone: string;
                status: import(".prisma/client").$Enums.status_code;
                equipamentoId: string;
                createdAt: Date;
                updatedAt: Date;
            };
            pessoa: {
                id: string;
                nome: string;
                cpf: string;
                sexo: string;
                whastapp: number;
                telefone: string;
                email: string;
                datanascimento: Date;
                rg: string;
                parentesco: string;
                escolaridade: string;
                estadocivil: string;
                renda: import("@prisma/client/runtime/library").Decimal;
                ctpsassinada: number;
                ppcl: number;
                gestante: number;
                observacao: string;
                observacaorestrita: string;
                motivoexclusao: string;
                cep: string;
                logradouro: string;
                complemento: string;
                bairro: string;
                localidade: string;
                numero: string;
                uf: string;
                status: import(".prisma/client").$Enums.status_code;
                equipamentoId: string;
                pessoaId: string;
                usuarioId: string;
                createdAt: Date;
                updatedAt: Date;
            };
            beneficio: {
                id: string;
                nome: string;
                descricao: string;
                categoria: string;
                valor: import("@prisma/client/runtime/library").Decimal;
                status: import(".prisma/client").$Enums.status_code;
                createdAt: Date;
                updatedAt: Date;
            };
        } & {
            id: string;
            quantidade: number;
            observacao: string;
            datacadastro: Date;
            motivo: string;
            nivel: string;
            status: import(".prisma/client").$Enums.status_code;
            pessoId: string;
            equipamentoId: string;
            beneficioId: string;
            usuarioId: string;
            createdAt: Date;
            updatedAt: Date;
        })[];
        usuarios: {
            id: string;
            nome: string;
            email: string;
            senha: string;
            telefone: string;
            status: import(".prisma/client").$Enums.status_code;
            equipamentoId: string;
            createdAt: Date;
            updatedAt: Date;
        }[];
        equipamentos: {
            id: string;
            nome: string;
            responsavel: string;
            sobre: string;
            observacao: string;
            cep: string;
            logradouro: string;
            complemento: string;
            bairro: string;
            localidade: string;
            numero: string;
            uf: string;
            status: import(".prisma/client").$Enums.status_code;
            createdAt: Date;
            updatedAt: Date;
        }[];
    }>;
    findallEntregaAvulsa(getBuscaDto: BuscaEntrega): Promise<{
        entregas: ({
            equipamento: {
                id: string;
                nome: string;
                responsavel: string;
                sobre: string;
                observacao: string;
                cep: string;
                logradouro: string;
                complemento: string;
                bairro: string;
                localidade: string;
                numero: string;
                uf: string;
                status: import(".prisma/client").$Enums.status_code;
                createdAt: Date;
                updatedAt: Date;
            };
            usuario: {
                id: string;
                nome: string;
                email: string;
                senha: string;
                telefone: string;
                status: import(".prisma/client").$Enums.status_code;
                equipamentoId: string;
                createdAt: Date;
                updatedAt: Date;
            };
            beneficio: {
                id: string;
                nome: string;
                descricao: string;
                categoria: string;
                valor: import("@prisma/client/runtime/library").Decimal;
                status: import(".prisma/client").$Enums.status_code;
                createdAt: Date;
                updatedAt: Date;
            };
        } & {
            id: string;
            nome: string;
            cpf: string;
            quantidade: number;
            observacao: string;
            datacadastro: Date;
            motivo: string;
            status: import(".prisma/client").$Enums.status_code;
            equipamentoId: string;
            beneficioId: string;
            usuarioId: string;
            createdAt: Date;
            updatedAt: Date;
        })[];
        usuarios: {
            id: string;
            nome: string;
            email: string;
            senha: string;
            telefone: string;
            status: import(".prisma/client").$Enums.status_code;
            equipamentoId: string;
            createdAt: Date;
            updatedAt: Date;
        }[];
        equipamentos: {
            id: string;
            nome: string;
            responsavel: string;
            sobre: string;
            observacao: string;
            cep: string;
            logradouro: string;
            complemento: string;
            bairro: string;
            localidade: string;
            numero: string;
            uf: string;
            status: import(".prisma/client").$Enums.status_code;
            createdAt: Date;
            updatedAt: Date;
        }[];
    }>;
    update(body: DefIndef): Promise<{
        id: string;
        quantidade: number;
        observacao: string;
        datacadastro: Date;
        motivo: string;
        nivel: string;
        status: import(".prisma/client").$Enums.status_code;
        pessoId: string;
        equipamentoId: string;
        beneficioId: string;
        usuarioId: string;
        createdAt: Date;
        updatedAt: Date;
    } | {
        error: string;
    }>;
}
